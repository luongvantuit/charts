# Copyright ZeroX

# Global define (Require)
global:
  # Full name override
  fullname: "gitlab"
  # Name override
  name: "gitlab"

# Controller
controller:
  # Kind of controller Development, DaemonSet, StatefulSet
  kind: "development"
  # Registry (Docker Hub) image default docker.io
  registry: "docker.io"
  # Image name
  image: "gitlab/gitlab-ce"
  # Version image default Chart app version
  version: "latest"
  # Pull policy default IfNotPresent
  pullPolicy: "IfNotPresent"
  # Replica count
  replicaCount: 1
  # GitLab root password (default random)
  password: ""
  # External URL (SSH host)
  externalUrl: ""
  # Extra environment variables
  # - name: ""
  #   value: ""
  # - name:
  #   valueFrom:
  #     configMapKeyRef(secretKeyRef):
  #       name:  ""
  #       key: ""
  extraEnvs: []
  # Extra configurations
  # extraConfigs: |
  #   letsencrypt['contact_emails'] = ['*'] # Optional
  extraConfigs: ""
  # (Controller port) HTTP port
  httpPort: 80
  # SSH port
  sshPort: 22
  # Pod annotations
  podAnnotations: {}
  # Image pull secrets
  imagePullSecrets: []
  # Pod security context
  podSecurityContext: {}
    # fsGroup: 2000
  # Security context
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  # Node selector
  nodeSelector:
  # Affinity
  affinity:
  # Tolerations
  tolerations:
  # Service of controller configuration  
  service:
    # Service type ClusterIP, LoadBalancer, NodePort default (LoadBalancer)
    type: ""
    # HTTP port
    httpPort: 80
    # ClusterIP with service type ClusterIP
    clusterIP: ""
    # Node port configuration
    nodePort: 30080
  # SSH configuration
  ssh: 
    # Enable SSH protocol
    enabled: true 
    # Service type ClusterIP, NodePort default (NodePort)
    type: ""
    # SSH Port
    port: 22
    # ClusterIP with service type ClusterIP
    clusterIP: ""
    # Node port configuration
    nodePort: 30022
  # Service account configuration
  serviceAccount:
    # Create new service account
    create: true
    # Service account name
    name: ""
    # Service account annotations
    # key=value
    annotations: {}

# Autoscaling horizontal (HorizontalPodAutoscaler)
autoscaling:
  # Enable autoscaling
  enabled: false
  # Min replicas
  minReplicas: 1
  # Max replicas
  maxReplicas: 
  # Metric CPU resource (CPU percentage)
  targetCPUUtilizationPercentage: 80
  # Metric memory resource (Memory - RAM percentage)
  targetMemoryUtilizationPercentage: 80
  
# Ingress configuration (Option)
ingress:
  # Enable ingress
  enabled: true
  # Annotations
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # Ingress class name
  className: ""
  # Host configuration
  host: ""
  # TLS configuration
  tlsConfig:
    # Enable TLS
    enabled: false 
    # TLS crt
    crt: ""
    # TLS key 
    key: ""