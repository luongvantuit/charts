# Copyright ZeroX.

# Global define (Required)
global:
  # Kube version
  kubeVersion: ""

  # Common labels
  commonLabels: {}

  # Common annotations
  commonAnnotations: {}

  # Cluster domain
  clusterDomain: cluster.local

# Full name override
fullnameOverride: nexus3

# Name override
nameOverride: nexus3

# Namespace override
namespaceOverride:

image:
  # The image registry of the Code Server.
  registry:

  # The image repository of the Code Server.
  repository: linuxserver/code-server

  # The tag of the Code Server image. If not specified the appVersion from Chart.yaml is used as a tag.
  # tag: "4.17.1"
  # The digest of the Code Server image.
  # If digest is specified it has precedence over tag and will be used instead
  # digest: "sha256:CHANGEME"

  # The pull policy for the Code Server image.
  tag:

# Annotations for deployment
annotations: {}

selectorLabels: {}

pod:
  # The annotations of the Code Server pod.
  annotations: {}

  # The additional extra labels of the Code Server pod.
  extraLabels: {}

hostPorts:
  # Enables hostPort for the Code Server pods.
  enabled: false

  # The HTTP hostPort configuration for the Code Server pods.
  http: 80

containerPorts:
  # The HTTP containerPort configuration for the Code Server pods.
  http: 80

# DNS policy for the Code Server pods
dnsPolicy: ClusterFirst

# Share process namespace between containers in the Code Server pod.
shareProcessNamespace: false

# A list of extra ports to expose on the Code Server pod. Follows the conventional Kubernetes yaml syntax for container ports.
extraPorts: []

# The lifecycle of the Code Server pods.
lifecycle: {}

# The node selector for pod assignment for the Code Server pods.
# nodeSelector: {}

# The termination grace period of the Code Server pod.
terminationGracePeriodSeconds: 30

# Enables the Code Server pods to use the host's network namespace.
hostNetwork: false

# The resources of the Code Server pods.
resources:
  requests:
    cpu: 100m
    memory: 128Mi
# limits:
#   cpu: 1
#   memory: 1Gi

# The security context for the Code Server pods.
podSecurityContext:
  fsGroup: 200
  # seccompProfile:
  #   type: RuntimeDefault

# The security context for the Code Server containers.
securityContext:
  # Remove curly brackets before adding values
  capabilities:
    drop:
      - ALL
    # add:
    #   - NET_BIND_SERVICE
  # allowPrivilegeEscalation: true
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 200

# The tolerations of the Code Server pods.
tolerations: []

# The affinity of the Code Server pods.
affinity: {}

# The topology spread constraints of the Code Server pods.
# topologySpreadConstraints: {}

# The PriorityClass of the Code Server pods.
# priorityClassName: ""

# Strategy used to replace old Pods by new ones. .spec.strategy.type can be "Recreate" or "RollingUpdate" for Deployments, and "OnDelete" or "RollingUpdate" for Daemonsets. "RollingUpdate" is the default value.
strategy: {}

# The minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing, for it to be considered available.
minReadySeconds: 0

# The additional environment variables to be set on the Code Server pods.
extraEnvVars: []
# - name: MY_VAR
#   value: myvalue

# The number of replicas of the Code Server deployment.
replicaCount: 1

# Extra containers for the Code Server pods.
extraContainers: []
# - name: container
#   image: busybox:1.34
#   command: ['sh', '-c', 'echo this is a sidecar!']

emptyPassword: false

password:

hashedPassword:

sudoPassword:

sudoPasswordHash:

proxyDomain:

defaultWorkspace:

extraArgs:

service:
  create:

  type:

  ports:
    http:

  clusterIP:

  nodePort:

serviceAccount:
  create:

  name:

  annotations: {}

ingress:
  enabled:

  annotations:

  ingressClassName:

  pathType:

  extraRules:

  extraPaths:

  host:

  extraHosts:

  tls:

  extraTls:
    # - key:
    #   crt:

persistence:
  create: false

  storageClassName:
