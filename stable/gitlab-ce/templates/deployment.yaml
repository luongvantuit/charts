{{/*
Copyright ZeroX.
*/}}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.controller.replaceCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
        {{- with .Values.controller.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.controller.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.controller.hostNetwork | default false }}
      serviceAccountName: {{ include "common.serviceAccount.name" . }}
      {{- if .Values.controller.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.registry | default "docker.io" }}/{{ required "require image tag" .Values.controller.image }}:{{ .Values.controller.version | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.pullPolicy | default "IfNotPresent" }}
          ports:
            {{- if .Values.controller.httpPort }}
            - name: http
              containerPort: {{ .Values.controller.httpPort }}
              protocol: TCP
            {{- end }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          envFrom:
            - configMapRef:
                name: {{ include "common.fullname" . }}
            - secretRef: 
                name: {{ include "common.fullname" . }}
          env:
            {{- if .Values.controller.extraEnvs }}
            {{- toYaml .Values.controller.extraEnvs | nindent 12 }}
            {{- end }}
          {{- if .Values.controller.resources }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /etc/gitlab
              name: gitlab-home
              subPath: config
            - mountPath: /var/log/gitlab
              name: gitlab-home
              subPath: logs
            - mountPath: /var/opt/gitlab
              name: gitlab-home
              subPath: data
          {{- with .Values.controller.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: gitlab-home
          {{- if or .Values.pvc.create .Values.controller.persistentVolumeClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.controller.persistentVolumeClaim | default ( include "common.fullname" . ) }}
          {{- else }}
          hostPath:
            path: {{ .Values.controller.volumeHostPath | default "/tmp/gitlab" }}
            type: {{ .Values.controller.volumeType | default "DirectoryOrCreate" }}
          {{- end }}
      {{- with .Values.controller.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}